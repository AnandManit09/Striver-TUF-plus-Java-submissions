class Solution {
    public int[] topoSort(int V, List<Integer>[] adj) {
        
        boolean[] visited=new boolean[V];
        Stack<Integer> st=new Stack<>();

        for(int i=0;i<V;i++){
            if(!visited[i]){
                dfs(i,adj,V,visited,st);
            }
        }
        int[] ans=new int[V];
        for(int i=0;i<V;i++){
            ans[i]=st.pop();
            //System.out.print(ans[i]+" ");
        }
        //System.out.println();

        return ans;
    }

    private void dfs(int node,List<Integer>[] adj,int n, boolean[] visited, Stack<Integer> st){

        visited[node]=true;

        for(int it:adj[node]){
            if(!visited[it]){
                dfs(it,adj,n,visited,st);
            }
        }

        st.push(node);
    }
}
