class Solution {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        int n=nums1.length;
        int[] ans=new int[n];
        Map<Integer,Integer> mapp= getMapOfSuperSet(nums2);
        for(int i=0;i<n;i++){
            ans[i]=mapp.get(nums1[i]);
        }
        return ans;
    }
    private Map<Integer,Integer> getMapOfSuperSet(int[] nums2){

        int n=nums2.length;
        Stack<Integer> st=new Stack<>();
        Map<Integer,Integer> mapp=new HashMap<>();

        for(int i=n-1;i>=0;i--){
            int curr=nums2[i];

            while(!st.isEmpty() && st.peek()<=nums2[i]){
                st.pop();
            }

            if(st.isEmpty()){
                mapp.put(curr,-1);
            }else{
                mapp.put(curr,st.peek());
            }
            st.push(curr);
        }
        return mapp;
    }
}
